version: 1.0.{build}
image: Visual Studio 2017
configuration:
- Debug
before_build:
- cmd: nuget restore src\Markify.sln -verbosity detailed
build:
  project: src/Markify.sln
  verbosity: minimal
environment:
    COVERALLS_REPO_TOKEN:  
       secure: LzNrIl+p3PFuAPMSM+HwdnXT+edzlFsl/owok+qNPpOiVhkOIk1hQN9ZuPnzULzO
test:
  assemblies:
  - src\Services\Roslyn\Markify.Services.Roslyn.Tests\bin\Debug\Markify.Services.Roslyn.Tests.dll
  - src\Core\Markify.Core.FSharp.Tests\bin\Debug\Markify.Core.FSharp.Tests.dll
  - src\Services\Document\Markify.Services.Document.Tests\bin\Debug\Markify.Services.Document.Tests.dll
  - src\Services\VisualStudio\Markify.Services.VisualStudio.Tests\bin\Debug\Markify.Services.VisualStudio.Tests.dll
  - src\Services\Rendering\Markify.Services.Rendering.Tests\bin\Debug\Markify.Services.Rendering.Tests.dll
  - src\Services\Rendering\Markify.Services.Rendering.T4.Tests\bin\Debug\Markify.Services.Rendering.T4.Tests.dll
after_test:
    - ps: >-
        $tests = (
          ("Markify.Services.Roslyn.Tests", "Services\Roslyn"),
          ("Markify.Core.FSharp.Tests", "Core\"),
          ("Markify.Services.Document.Tests", "Services\Document"),
          ("Markify.Services.VisualStudio.Tests", "Services\VisualStudio"),
          ("Markify.Services.Rendering.Tests", "Services\Rendering"),
          ("Markify.Services.Rendering.T4.Tests", "Services\Rendering")
        )

        $filter = "+[Markify*]* -[*.Tests]*"

        $xunitConsole = (Resolve-Path "src/packages/xunit.runner.console.2.*/tools/net452/xunit.console.exe").ToString()

        foreach($test in $tests) {
          & .\src\packages\OpenCover.*\tools\OpenCover.Console.exe -register:user `
          -target:"$xunitConsole" -targetargs:".\src\$($test[1])\$($test[0])\bin\$env:CONFIGURATION\$($test[0]).dll -noshadow -parallel none" `
          -skipautoprops -hideskipped:All `
          -filter:"$filter" `
          -excludebyattribute:*.ExcludeFromCodeCoverage* `
          -excludebyfile:*.tt `
          -output:coverage.xml -mergeoutput
        }

        $coveralls = (Resolve-Path "src/packages/coveralls.net.*/tools/csmacnz.coveralls.exe").ToString()

        & $coveralls --opencover -i coverage.xml `
        --repoToken $env:COVERALLS_REPO_TOKEN `
        --commitId $env:APPVEYOR_REPO_COMMIT `
        --commitBranch $env:APPVEYOR_REPO_BRANCH `
        --commitAuthor $env:APPVEYOR_REPO_COMMIT_AUTHOR `
        --commitEmail $env:APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL `
        --commitMessage $env:APPVEYOR_REPO_COMMIT_MESSAGE `
        --jobId $env:APPVEYOR_JOB_ID
